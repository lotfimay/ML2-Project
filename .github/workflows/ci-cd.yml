name: Deploy API

on:
  push:
    branches:
      - main
      - api-ci-cd # Include your test branch

jobs:
  deploy-api:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the code
      - name: Checkout Code
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 3: Log in to Amazon ECR
      - name: Log in to Amazon ECR
        id: ecr-login
        uses: aws-actions/amazon-ecr-login@v1

      # Step 4: Build, Tag, and Push Docker Image
      - name: Build, Tag, and Push Docker image
        env:
          ECR_REGISTRY: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
          ECR_REPOSITORY: mlops
          IMAGE_TAG: latest
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG ./api
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      # Step 5: Deploy to ECS
      - name: Deploy to ECS
        run: |
          aws ecs update-service \
            --cluster ${{ secrets.AWS_ECS_CLUSTER_NAME }} \
            --service ${{ secrets.AWS_ECS_SERVICE_NAME }} \
            --force-new-deployment \
            --region ${{ secrets.AWS_REGION }}
